'''
69. Sqrt(x)
Implement int sqrt(int x).

Compute and return the square root of x, where x is guaranteed to be a non-negative integer.

Since the return type is an integer, the decimal digits are truncated and only the integer part of the result is returned.

Example 1:

Input: 4
Output: 2
Example 2:

Input: 8
Output: 2
Explanation: The square root of 8 is 2.82842..., and since
             the decimal part is truncated, 2 is returned.


Answer: Binary Search
'''

import math

class Solution:
    def mySqrt(self, x):
        lo = 1
        hi = x
        if x==0:
            return 0
        mid = (lo+hi)//2
        while lo < hi-1:
            mid = (lo+hi)//2
            if mid**2 == x:
                return mid
            elif mid**2 > x:
                hi = mid
            else:
                lo = mid
        return lo

        # return int(math.sqrt(x)) is straightforward, and passes test cases; but binary search solution is better
        """
        :type x: int
        :rtype: int
        """
