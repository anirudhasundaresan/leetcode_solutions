'''
349. Intersection of Two Arrays

Given two arrays, write a function to compute their intersection.

Example 1:

Input: nums1 = [1,2,2,1], nums2 = [2,2]
Output: [2]
Example 2:

Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
Output: [9,4]
Note:

Each element in the result must be unique.
The result can be in any order.

Answer: Sorting (I did based on set intersection functions)
'''

class Solution:
    def intersection(self, nums1, nums2):
        return list(set(nums1).intersection(set(nums2))) # or
        # return list(set(nums1) & set(nums2))
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: List[int]
        """

# https://leetcode.com/problems/intersection-of-two-arrays/discuss/82006/Four-Python-solutions-with-simple-explanation
'''
1. brute-force searching, search each element of the first list in the second list. (to be more efficient, you can sort the second list and use binary search to accelerate)
2. use dict/hashmap to record all nums appeared in the first list, and then check if there are nums in the second list have appeared in the map.
3. sort the two list, and use two pointer to search in the lists to find common elements.

# two pointer approach - new for me (likely to be the one used in finding intersection of sorted linked lists as well)

class Solution(object):
def intersection(self, nums1, nums2):
    """
    :type nums1: List[int]
    :type nums2: List[int]
    :rtype: List[int]
    """
    res = []
    nums1.sort()
    nums2.sort()
    i = j = 0
    while (i < len(nums1) and j < len(nums2)):
        if nums1[i] > nums2[j]:
            j += 1
        elif nums1[i] < nums2[j]:
            i += 1
        else:
            if not (len(res) and nums1[i] == res[len(res)-1]):
                res.append(nums1[i])
            i += 1
            j += 1

    return res
'''
