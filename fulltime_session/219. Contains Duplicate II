'''
219. Contains Duplicate II

Given an array of integers and an integer k, find out whether there are two distinct indices i and j in the array such that nums[i] = nums[j] and the absolute difference between i and j is at most k.

Example 1:

Input: nums = [1,2,3,1], k = 3
Output: true
Example 2:

Input: nums = [1,0,1,1], k = 1
Output: true
Example 3:

Input: nums = [1,2,3,1,2,3], k = 2
Output: false

Answer: Hash table
'''

from collections import defaultdict
class Solution:
    def containsNearbyDuplicate(self, nums, k):
        dic = defaultdict(list)
        for ind, num in enumerate(nums):
            dic[num].append(ind)
        for ls in dic.values():
            if len(ls) > 1 and min(abs(s-t) for s,t in zip(ls, ls[1:])) <= k:
                return True
        return False
        """
        :type nums: List[int]
        :type k: int
        :rtype: bool
        """

''' Better solution

class Solution:
    def containsNearbyDuplicate(self, nums, k):
        s = set()
        for ind, num in enumerate(nums):
            if num in s:
                return True
            s.add(num)
            if len(s) > k:
                s.remove(nums[ind-k])
        return False
        """
        :type nums: List[int]
        :type k: int
        :rtype: bool
        """
         
'''
