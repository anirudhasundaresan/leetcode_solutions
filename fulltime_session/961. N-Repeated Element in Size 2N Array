'''
961. N-Repeated Element in Size 2N Array

In a array A of size 2N, there are N+1 unique elements, and exactly one of these elements is repeated N times.

Return the element repeated N times.

Example 1:

Input: [1,2,3,3]
Output: 3
Example 2:

Input: [2,1,2,5,3,2]
Output: 2
Example 3:

Input: [5,1,5,2,5,3,5,4]
Output: 5


Note:

4 <= A.length <= 10000
0 <= A[i] < 10000
A.length is even

Answer: Logic

'''
from collections import Counter
class Solution:
    def repeatedNTimes(self, A):
        # return int((sum(A)-sum(set(A)))/((len(A)/2) - 1))
        return Counter(A).most_common()[0][0]
        """
        :type A: List[int]
        :rtype: int
        """

''' genius! 
    def repeatedNTimes(self, A):
        while 1:
            s = random.sample(A, 2)
            if s[0] == s[1]:
                return s[0]

50% to get the right number.
Each turn, 25% to get two right numbers.
Return the result in average 4 turns.
Time complexity O(4), space O(1)
'''
