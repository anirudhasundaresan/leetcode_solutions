'''
461. Hamming Distance

The Hamming distance between two integers is the number of positions at which the corresponding bits are different.

Given two integers x and y, calculate the Hamming distance.

Note:
0 ≤ x, y < 231.

Example:

Input: x = 1, y = 4

Output: 2

Explanation:
1   (0 0 0 1)
4   (0 1 0 0)
       ↑   ↑

The above arrows point to positions where the corresponding bits are different.

Answer: Bit manipulation; string; zip
'''

class Solution(object):
    def hammingDistance(self, x, y):
        # return bin(x^y).count('1') -- one-line solution
        x = bin(x)[2:]
        y = bin(y)[2:]
        diff = abs(len(x) - len(y))
        if len(x) < len(y):
            x = '0'*(diff) + x
        else:
            y = '0'*(diff) + y
        return sum(0 if i==j else 1 for i,j in zip(x,y))

        """
        :type x: int
        :type y: int
        :rtype: int
        """
