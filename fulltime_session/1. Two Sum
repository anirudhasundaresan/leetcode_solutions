'''
1. Two Sum

Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:

Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].

Answer: Logic and smarts

'''
class Solution:
    def twoSum(self, nums, target):
        # there is only one solution for each input
        # using a double for will be O(n2)
        for ind1, num1 in enumerate(nums):
            for ind2, num2 in enumerate(nums):
                if ind1 != ind2 and num2+num1 == target:
                    return [ind1, ind2]
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """

'''
Better solution: think like this!

class Solution(object):
    def twoSum(self, nums, target):
        if len(nums) <= 1:
            return False
        buff_dict = {}
        for i in range(len(nums)):
            if nums[i] in buff_dict:
                return [buff_dict[nums[i]], i]
            else:
                buff_dict[target - nums[i]] = i
'''
