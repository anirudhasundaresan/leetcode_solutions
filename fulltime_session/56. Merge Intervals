'''
56. Merge Intervals

Given a collection of intervals, merge all overlapping intervals.

Example 1:

Input: [[1,3],[2,6],[8,10],[15,18]]
Output: [[1,6],[8,10],[15,18]]
Explanation: Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].
Example 2:

Input: [[1,4],[4,5]]
Output: [[1,5]]
Explanation: Intervals [1,4] and [4,5] are considered overlapping.

Answer: Array , sorting

'''
# Definition for an interval.
# class Interval:
#     def __init__(self, s=0, e=0):
#         self.start = s
#         self.end = e

class Solution:
    def merge(self, intervals):
        if len(intervals)==0:
            return []
        intervals.sort(key=lambda x: x.start)
        res = [intervals[0]]
        pos = 0
        for int_ in intervals[1:]:
            if int_.start <= res[pos].end:
                res[pos].end = max(int_.end, res[pos].end)
            else:
                res.append(int_)
                pos += 1
        return res


        """
        :type intervals: List[Interval]
        :rtype: List[Interval]
        """
