'''
788. Rotated Digits

X is a good number if after rotating each digit individually by 180 degrees, we get a valid number that is different from X.  Each digit must be rotated - we cannot choose to leave it alone.

A number is valid if each digit remains a digit after rotation. 0, 1, and 8 rotate to themselves; 2 and 5 rotate to each other; 6 and 9 rotate to each other, and the rest of the numbers do not rotate to any other number and become invalid.

Now given a positive number N, how many numbers X from 1 to N are good?

Example:
Input: 10
Output: 4
Explanation:
There are four good numbers in the range [1, 10] : 2, 5, 6, 9.
Note that 1 and 10 are not good numbers, since they remain unchanged after rotating.
Note:

N  will be in range [1, 10000].

Answer: dictionary/ DP
'''

# use DP - https://leetcode.com/problems/rotated-digits/solution/
# - confusing, don't know


''' # Brute force - do dynamic programming method
class Solution(object):
    def rotatedDigits(self, N):
        dic = {'0':0, '1':1, '8':8, '2':5, '5':2, '6':9, '9':6}
        count = 0
        for i in range(N+1):
            new = ''
            x = list(str(i))
            for j in x:
                if j not in dic:
                    break
                else:
                    new += str(dic[j])
            else:
                if new!=''.join(x):
                    count += 1
        return count

        """
        :type N: int
        :rtype: int
        """
'''

'''
More pythonic:

class Solution(object):
    def rotatedDigits(self, N):
        ans = 0
        # For each x in [1, N], check whether it's good
        for x in xrange(1, N+1):
            S = str(x)
            # Each x has only rotateable digits, and one of them
            # rotates to a different digit
            ans += (all(d not in '347' for d in S)
                    and any(d in '2569' for d in S))
        return ans
'''
